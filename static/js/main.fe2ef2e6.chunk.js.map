{"version":3,"sources":["images/smiley.png","Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Joke","props","state","score","getColor","bind","votes","this","className","onClick","upvote","style","borderColor","downvote","joke","getEmoji","Component","JokeList","jokes","JSON","parse","localStorage","getItem","loading","seenJokes","Set","map","j","generateJokes","handleVote","handleClick","id","delta","setState","st","setItem","stringify","tempJokes","length","numJokes","axios","get","headers","Accept","res","has","data","console","log","push","uuidv4","alert","jokeComponent","sort","a","b","key","src","smiley","alt","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fe2ef2e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smiley.e64a51de.png\";","import React, { Component } from 'react';\r\nimport './css/Joke.css';\r\n\r\nexport default class Joke extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tscore: 0,\r\n\t\t};\r\n\t\tthis.getColor = this.getColor.bind(this);\r\n\t\t// this.decreaseScore = this.decreaseScore.bind(this);\r\n\t}\r\n\r\n\tgetColor() {\r\n\t\tlet votes = this.props.votes;\r\n\t\tif (votes > 15) {\r\n\t\t\treturn '#4caf50';\r\n\t\t} else if (votes > 10) {\r\n\t\t\treturn '#8bbc34a';\r\n\t\t} else if (votes > 7) {\r\n\t\t\treturn '#cddc39';\r\n\t\t} else if (votes > 5) {\r\n\t\t\treturn '#ffeb3b';\r\n\t\t} else if (votes > 2) {\r\n\t\t\treturn '#ffc107';\r\n\t\t} else if (votes > 0) {\r\n\t\t\treturn '#ff9800';\r\n\t\t} else {\r\n\t\t\treturn '#f44336';\r\n\t\t}\r\n\t}\r\n\r\n\tgetEmoji() {\r\n\t\tlet votes = this.props.votes;\r\n\t\tif (votes > 9) {\r\n\t\t\treturn 'em em-rolling_on_the_floor_laughing';\r\n\t\t} else if (votes > 6) {\r\n\t\t\treturn 'em em-laughing';\r\n\t\t} else if (votes > 3) {\r\n\t\t\treturn 'em em-smiley';\r\n\t\t} else if (votes > 1) {\r\n\t\t\treturn 'em em-slightly_smiling_face';\r\n\t\t} else if (votes > 0) {\r\n\t\t\treturn 'em em-confused';\r\n\t\t} else if (votes > -1) {\r\n\t\t\treturn 'em em-neutral_face';\r\n\t\t} else {\r\n\t\t\treturn 'em em-angry';\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='Joke'>\r\n\t\t\t\t<div className='Joke-btns'>\r\n\t\t\t\t\t<div className='Joke-btn' onClick={this.props.upvote}>\r\n\t\t\t\t\t\t<i className='far fa-thumbs-up'></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='Joke-score' style={{ borderColor: this.getColor() }}>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{this.props.votes}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='Joke-btn' onClick={this.props.downvote}>\r\n\t\t\t\t\t\t<i className='far fa-thumbs-down'></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='Joke-text'>{this.props.joke}</div>\r\n\t\t\t\t<div className='Joke-emoji'>\r\n\t\t\t\t\t<i className={this.getEmoji()}></i>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Joke from './Joke';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../src/css/JokeList.css';\r\nimport smiley from '../src/images/smiley.png';\r\n\r\nexport default class JokeList extends Component {\r\n\tstatic defaultProps = {\r\n\t\tnumJokes: 10,\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tjokes: JSON.parse(localStorage.getItem('jokes') || '[]'),\r\n\t\t\tloading: false,\r\n\t\t};\r\n\t\tthis.seenJokes = new Set(this.state.jokes.map((j) => j.joke));\r\n\t\tthis.generateJokes = this.generateJokes.bind(this);\r\n\t\tthis.handleVote = this.handleVote.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleVote(id, delta) {\r\n\t\tthis.setState(\r\n\t\t\t(st) => ({\r\n\t\t\t\tjokes: st.jokes.map((j) =>\r\n\t\t\t\t\tj.id === id ? { ...j, votes: j.votes + delta } : j\r\n\t\t\t\t),\r\n\t\t\t}),\r\n\t\t\t() => localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n\t\t);\r\n\t}\r\n\r\n\tasync generateJokes() {\r\n\t\ttry {\r\n\t\t\tlet tempJokes = [];\r\n\r\n\t\t\twhile (tempJokes.length < this.props.numJokes) {\r\n\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com/', {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tif (!this.seenJokes.has(res.data.joke)) {\r\n\t\t\t\t\ttempJokes.push({\r\n\t\t\t\t\t\tid: uuidv4(),\r\n\t\t\t\t\t\tjoke: res.data.joke,\r\n\t\t\t\t\t\tvotes: 0,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else console.log('Found duplicate');\r\n\t\t\t}\r\n\t\t\tthis.setState((st) => ({\r\n\t\t\t\tloading: false,\r\n\t\t\t\tjokes: [...st.jokes, ...tempJokes],\r\n\t\t\t}));\r\n\t\t\tlocalStorage.setItem('jokes', JSON.stringify(tempJokes));\r\n\t\t} catch (e) {\r\n\t\t\talert(e);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (this.state.jokes.length === 0) {\r\n\t\t\tthis.generateJokes();\r\n\t\t}\r\n\t}\r\n\r\n\thandleClick() {\r\n\t\tthis.setState({ loading: true }, this.generateJokes);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='JokeList-spinner'>\r\n\t\t\t\t\t<i className='far fa-8x fa-laugh fa-spin'></i>\r\n\t\t\t\t\t<h1 className='JokeList-title'>Loading...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\tlet sortedJokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\r\n\t\tlet jokeComponent = sortedJokes.map((j) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Joke\r\n\t\t\t\t\tkey={j.id}\r\n\t\t\t\t\tjoke={j.joke}\r\n\t\t\t\t\tvotes={j.votes}\r\n\t\t\t\t\tupvote={() => this.handleVote(j.id, 1)}\r\n\t\t\t\t\tdownvote={() => this.handleVote(j.id, -1)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<section className='JokeList'>\r\n\t\t\t\t<div className='JokeList-sidebar'>\r\n\t\t\t\t\t<h1 className='JokeList-title'>Dad Jokes</h1>\r\n\t\t\t\t\t<div className='JokeList-emoji'>\r\n\t\t\t\t\t\t<img className='Jokelist-img' src={smiley} alt='emoji' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className='Jokelist-btn' onClick={this.handleClick}>\r\n\t\t\t\t\t\tGet new Jokes\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='JokeList-list'>{jokeComponent}</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport JokeList from './JokeList';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<JokeList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}